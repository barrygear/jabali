/*
jabali-api

Testing JabaliAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package jabalisdkgo

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/barrygear/jabali-sdk-go"
)

func Test_jabalisdkgo_JabaliAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test JabaliAPIService CheckHealth", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.JabaliAPI.CheckHealth(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JabaliAPIService GameGameIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var gameId string

		httpRes, err := apiClient.JabaliAPI.GameGameIdDelete(context.Background(), gameId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JabaliAPIService GameGameIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var gameId string

		resp, httpRes, err := apiClient.JabaliAPI.GameGameIdGet(context.Background(), gameId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JabaliAPIService GameGameIdPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var gameId string

		resp, httpRes, err := apiClient.JabaliAPI.GameGameIdPut(context.Background(), gameId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JabaliAPIService GamePost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.JabaliAPI.GamePost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JabaliAPIService GamesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.JabaliAPI.GamesGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
